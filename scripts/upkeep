#!/bin/bash

set -e

home="/home/vcap"
app_path="${home}/app"
html_path="${app_path}/html"

theme_name="digital_gov"

source "${home}/.bashrc"

mkdir -p "${html_path}"

PYTHONWARNINGS="ignore:Unverified HTTPS request"
export PYTHONWARNINGS

application_uri=$(echo "${VCAP_APPLICATION}" | jq -r '.application_uris[]')
export application_uri

AWS_ACCESS_KEY_ID=$(echo "${VCAP_SERVICES}" | jq -r '.s3[] | select(.name | strings | test("static")).credentials.access_key_id')
export AWS_ACCESS_KEY_ID

AWS_SECRET_ACCESS_KEY=$(echo "${VCAP_SERVICES}" | jq -r '.s3[] | select(.name | strings | test("static")).credentials.secret_access_key')
export AWS_SECRET_ACCESS_KEY

AWS_DEFAULT_REGION=$(echo "${VCAP_SERVICES}" | jq -r '.s3[] | select(.name | strings | test("static")).credentials.region')
export AWS_DEFAULT_REGION

bucket_name=$(echo "${VCAP_SERVICES}" | jq -r '.s3[] | select(.name | strings | test("static")).name')
export bucket_name

bucket=$(echo "${VCAP_SERVICES}" | jq -r '.s3[] | select(.name | strings | test("static")).credentials.bucket')
export bucket

bucket_endpoint=$(echo "${VCAP_SERVICES}" | jq -r '.s3[] | select(.name | strings | test("static")).credentials.endpoint')
export bucket_endpoint

ssg_endpoint="https://digital-gov-static-${environment}.app.cloud.gov"
export ssg_endpoint
# [ "${environment}" = "prod" ] && ssg_endpoint="https://digital.gov"

ssg_sitemap_endpoint="${ssg_endpoint}"
export ssg_sitemap_endpoint

# Temporarily print out commands as they run for debugging.
set -x

cd "${app_path}"
echo "**************************************************"
echo "Running 'drush cr' in '${environment}'..."
echo "**************************************************"
drush cr
echo "'drush cr' task...completed!"
echo ""

echo "**************************************************"
echo "Running 'drush cron' in '${environment}'..."
echo "**************************************************"
drush --uri="${ssg_endpoint}" cron
echo "'drush cron' task...completed!"
echo ""

echo "**************************************************"
echo "Running 'drush tome:static' in '${environment}'..."
echo "**************************************************"
drush tome:static --uri="${ssg_endpoint}" --path-count=1 --retry-count=3 -y
drush tome:static-export-path '/sitemap.xml' --uri="${ssg_sitemap_endpoint}" --retry-count=3 -y
drush cr
echo "'drush tome:static' task...completed!"
echo ""

echo "**************************************************"
echo "Performing find and replace tasks..."
echo "**************************************************"
echo "-- Replace s3-based file urls with relative urls"
echo "**************************************************"
find "${html_path}" -type f -exec grep -l 'http[s]*://[^/]\+/s3/files' {} \; -exec sed -i 's#http[s]*://[^/]\+/s3/files#/s3/files#g' {} +
echo "**************************************************"
echo "-- Replace absolute urls with relative urls in generated files"
echo "**************************************************"
find "${html_path}/sites/default/files" -type f -exec grep -l "${ssg_endpoint}/" {} \; -exec sed -i "s#${ssg_endpoint}/#/#g" {} +
echo "Performing find and replace tasks...completed!"
echo ""
find "${html_path}/sites/default/files"
echo "**************************************************"
echo "Adding missing Core assets vendor directory..."
echo "**************************************************"
mkdir -p "${html_path}/core/assets"
cp -rfp "${app_path}/web/core/assets/vendor" "${html_path}/core/assets/"
echo "Missing Core assets files...completed!"
echo ""

echo "**************************************************"
echo "Update URI for sitemap..."
echo "**************************************************"
sed -i "s#http[s]*://default#${ssg_endpoint}#g" "${html_path}/sitemap.xml"
echo "Sitemap update complete..."
echo ""

echo "**************************************************"
echo "Adding digital.gov custom theme assets..."
echo "**************************************************"
mkdir -p "${html_path}/themes/custom/${theme_name}"
cp -rfp "${app_path}/web/themes/custom/${theme_name}/static" "${html_path}/themes/custom/${theme_name}/"
echo "Adding digital.gov custom theme assets...completed!"
echo ""

echo "**************************************************"
echo "Copying robots.txt to static site path..."
echo "**************************************************"
cp "${app_path}/web/robots.txt"  "${html_path}/robots.txt"
echo "robots.txt copy...completed!"
echo ""

echo "**************************************************"
echo "Deleting 'node' redirect files..."
echo "**************************************************"
find "${html_path}" -type d -name "node" -print0 | while IFS= read -r -d '' node_dir; do
    # Find index.html files within each 'node' directory that are a redirect.
    find "$node_dir" -type f -path "*/index.html" -exec grep -q "http-equiv=\"refresh\"" {} \; -delete -exec dirname {} \;
done
echo "Deleting 'node' redirect files...completed!"
echo ""

echo "**************************************************"
echo "Removing empty directories..."
echo "**************************************************"
find "${html_path}" -type d -empty -delete
echo "Removing empty directories...completed!"
echo ""

cd "${html_path}"
echo "**************************************************"
echo "Copying static files to '${bucket_name}'..."
echo "**************************************************"
aws s3 sync . "s3://${bucket}" --delete --no-verify-ssl 2>/dev/null
aws s3 website "s3://${bucket}" --index-document index.html --error-document /404/index.html  --no-verify-ssl 2>/dev/null
echo "Copy to '${bucket_name}'...completed!"
echo ""
